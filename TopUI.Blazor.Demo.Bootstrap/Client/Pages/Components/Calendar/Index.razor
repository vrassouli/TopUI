@page "/components/calendar"

<div class="row gap-2 gap-md-0 flex-nowrap">
    <div class="col-md order-1 order-md-0">
        <CalendarView @ref=_elRef @attributes=_parameters @bind-Value="_selectedDate" DateClass="GetDateClass" />
        <div>Selected date: @_selectedDate</div>

        <h3 class="mt-5">Usage:</h3>
<pre class="bg-body-tertiary p-2 rounded border">
        <code class="razor">
                @TopUI.Blazor.Core.Generators.CodeGenerator.GenerateComponentInitializer(typeof(CalendarView<DateTime?>), _parameters)
    </code>
</pre>
        <CalendarView Culture="@(new System.Globalization.CultureInfo("fa-IR"))" @bind-Value="_selectedDate" DateClass="GetDateClass" />

        @if (_selectedDate != null)
        {
            <div>Selected date: @_selectedDate.Value.ToString(new System.Globalization.CultureInfo("fa-IR"))</div>
        }
    </div>
    <div class="col-md-auto order-0 order-md-1">
        <PropertyGrid ValueSource="_elRef" PropertyValuesChanged="p => _parameters = p" class="mt-1">
        </PropertyGrid>
    </div>
</div>

@code {
    private CalendarView<DateTime?>? _elRef;
    private Dictionary<string, object?>? _parameters;
    private DateTime? _selectedDate;

    protected override void OnAfterRender(bool firstRender)
    {
        // Element references are captured after render.
        // So in order to pass the element reference to the PropertyGrid, we need to re-render after first render.
        if (firstRender)
            StateHasChanged();

        base.OnAfterRender(firstRender);
    }

    private string GetDateClass(DateTime date)
    {
        if (date.DayOfWeek == DayOfWeek.Friday)
            return "bg-danger-subtle text-danger border-danger-subtle";

        return string.Empty;
    }
}